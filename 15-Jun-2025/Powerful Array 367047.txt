# Problem: Powerful Array - https://codeforces.com/problemset/problem/86/D

#include <bits/stdc++.h>
using namespace std;
#define int long long

const int MAX = 1e6 + 5;
int cnt[MAX], power = 0;

struct Query {
    int l, r, idx;
    bool operator<(const Query &other) const {
        int block_own = l / 450;
        int block_other = other.l / 450;
        if (block_own != block_other) return block_own < block_other;
        return (block_own & 1) ? (r < other.r) : (r > other.r); // optimize ordering
    }
};

void add(int x) {
    power -= cnt[x] * cnt[x] * x;
    cnt[x]++;
    power += cnt[x] * cnt[x] * x;
}

void remove(int x) {
    power -= cnt[x] * cnt[x] * x;
    cnt[x]--;
    power += cnt[x] * cnt[x] * x;
}

int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);

    int n, t;
    cin >> n >> t;

    vector<int> a(n + 1);
    for (int i = 1; i <= n; i++) cin >> a[i];

    vector<Query> queries(t);
    for (int i = 0; i < t; i++) {
        cin >> queries[i].l >> queries[i].r;
        queries[i].idx = i;
    }

    sort(queries.begin(), queries.end());

    vector<int> ans(t);
    int l = 1, r = 0;

    for (auto &q : queries) {
        while (r < q.r) add(a[++r]);
        while (r > q.r) remove(a[r--]);
        while (l < q.l) remove(a[l++]);
        while (l > q.l) add(a[--l]);

        ans[q.idx] = power;
    }

    for (int x : ans) cout << x << "\n";

    return 0;
}
